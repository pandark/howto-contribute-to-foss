[en]
howto-contribute = How to contribute to an open source software project
pick-project = Pick a project
pick-howto = How do you choose an open source project to contribute to?
pick-engaging.innerHTML = Think of it this way: You're looking for a project whose <em>goal</em> and <em>community</em> would make for an engaging hobby. (Even if you only contribute to the project once, it should still be something you enjoy doing.)
pick-work = There is one exception: If you have to work on this project for your job or a similar reason.
pick-following = Think about the following things:
pick-problem = Does the software behind the project solve a problem you want to help solve?
pick-admire = Is there something you admire about the project?
pick-mean = Does the project have good ways for you to contribute? For example, maybe it needs documentation, or maybe it is written in a programming language you want to learn or already know.
use-software = Use the software
use-familiar = Before you contribute to an open source project, you're going to want to be familiar with how the program works and what people use it for. Legend has it that the best projects to contribute to are ones you already use. What matters most is that you can understand what kinds of changes would benefit users of the program, and that comes from experience using it.
community-find = Find the (tech) community
community-information = Many open source projects have one set of information for users of the project, and another set of information for prospective contributors. It's essential that you find the contributor-oriented venues so you can be plugged into conversation about the project.
information-look = Look for these kinds of things:
information-irc = One or more IRC channels, for chatting
information-mailing-list = A developer-oriented email list
information-bugtracker = A bug tracker
information-scattered = The documentation for some open source projects is very scattered, so your best bet for finding (for example) the WordPress email list is to just search the web with Google. Try searching for [wordpress email list].
information-no-tools = Note that if a project does not use tools like this, that can be a warning sign that they are not good at handling contributions.
information-high-five = This step is essential, so raise your hand when you finish, and a staff member will come by, validate your findings, and give you a high-five.
choose-what = Choose what you'll improve
choose-idea = For this step, you can come up with your own idea, or find a task suggested by the project.
choose-defined.innerHTML = We <em>strongly recommend</em> choosing a task that is very well-defined! Fixing a typo in the documentation, adding some comments to the project's source code, or fixing a small bug with a very clear solution are all good options.
choose-easy = Many projects list bugs that are "easy", or good for first time contributors. A future version of this document will link to good first bugs.
choose-bugtracker = If you have come up with your own idea of what to work on, make sure to enter it into the bug tracker for the project.
choose-staff.innerHTML = Once you have your idea of what you'll work on, raise your hand, and a staff member will come by and make sure they agree it will fit in the limited time we have today. Then you will get a <a href="img/high-five.gif">high five</a>!
download-stuff = Download the stuff to modify
download-vcs = Open source projects usually keep the latest version of their source code in some sort of version control system. In this step, you should find out where the source code is kept and download it onto your computer.
download-different = (Note that different projects have different ways of storing their source code. so this part can get somewhat complex.)
download-github = If the project is hosted on Github, you should log into Github and click "fork", then use "git" on your computer to "clone" your new personal copy of the project.
download-instructions = Generally, look for instructions by the project for a "clone" or "checkout" command.
download-exceptions = Finally, you should know there are a couple of exceptions. First, some projects accept translations via a website, in which case there is nothing to download! That's easy. Second, a small number of projects do not use version control tools. Instead, they periodically release "tarballs." In that case, you'll need to download and extract the "tar" file for the latest version of the software.
download-ask.innerHTML = Finding the right way to get the code can be difficult, so feel very welcome to raise your hand and ask for help. Once you have this download started, raise your hand, and a staff member will come by and verify. Once you and the staffer agree, you get a <a href="img/high-five-cat.gif">high five</a>!
environment-setup = Set up a development environment
environment-readme = This varies wildly from project to project. Once you download the code, look for a README or INSTALLATION file to see how to set it up.
environment-webserver = In the case of a web application, like WordPress, you will need to run a web server on your own computer.
environment-wordpress = Wordpress:
environment-text-editor = In all cases, you'll need to use a plain text editor:
environment-windows-editor = On Windows, we recommend Notepad++.
environment-mac-editor = On Mac OS, we recommend Smultron.
environment-linux-editor = On GNU/Linux, we recommend gedit.
environment-web-only = Note that if you are making changes such as translation that can be done entirely via the web, all you have to do to satisfy this step is to visit the appropriate website!
environment-staff.innerHTML = Once you have a working development environment for your project, you should raise your hand and show it to a staff member. <a href="http://downtime.makesad.us/foss-contrib-guide/img/curiosity-celebration.gif">Congratulations</a>! This is often the hardest part of contributing to a project.
environment-mac-webserver.innerHTML = For Mac users, follow <a href="https://codex.wordpress.org/Installing_WordPress_Locally_on_Your_Mac_With_MAMP">these instructions</a>.
issue-reproduce = Reproduce/understand the issue
issue-understand = Whatever problem you are trying to solve, make sure you understand exactly what the problem is.
issue-yourself = We recommend trying to reproduce the problem yourself. For example, if you are trying to solve a bug where, upon printing, the document comes out all red, try it. That way, you'll be able to tell if your changes fix the problem.
issue-already = You might even find the bug can't be reproduced, in which case you should say so on the bug tracker. (Perhaps the bug is actually fixed, in which case, congratulations! You don't have to write any code; you just have to update the status of the bug, and then you get credit!)
issue-ask = If you can't figure out how to reproduce the problem, raise your hand and ask an instructor for help.
issue-discuss.innerHTML = Once you can reproduce the problem, raise your hand, and discuss the bug with an instructor. Once the staff member verifies you've reproduced the problem, you earn a <a href="img/high-five-2.gif">high five</a>!
edit-code = Edit the code
prepare-isolate = Isolate + prepare your changes
test-it = Test it
private-feedback = (Optional) Get private feedback before submitting
share-changes = Share your changes
feedback-respond = Respond to feedback
sucess-accepted = Success! Maintainer accepts your change :)
webapp-install = Install me!

[fr]
howto-contribute = Comment contribuer à un projet de logiciel libre ?
pick-project = Choisir un projet
pick-howto = Comment choisir un projet Open Source auquel contribuer ?
pick-engaging.innerHTML = Pensez-y de cette façon : Vous cherchez un projet dont les <em>objectifs</em> et la <em>communauté</em> feraient un hobby intéressant. (Même si vous ne contribuez au projet qu'une seule fois, ça doit tout de même être quelque chose que vous appréciez de faire).
pick-work = Il y a une exception : si vous devez travailler sur ce projet pour votre travail ou une raison similaire.
pick-following = Pensez aux choses suivantes :
pick-problem = Le logiciel derrière ce projet résout-il un problème que vous souhaitez aider à régler ?
pick-admire = Y a-t-il quelque chose que vous admirez dans ce projet ?
pick-mean = Ce projet fournit-il de bons moyens de contribuer ? Par exemple, peut-être a-t-il besoin de documentation, ou est-il écrit dans un langage de programmation que vous voulez apprendre ou que vous connaissez déjà.
use-software = Utiliser le logiciel
use-familiar = Avant de contribuer à un projet Open Source, vous voudrez vous familiariser avec le fonctionnement du programme et ce pour quoi les gens l'utilisent. La légende dit que les meilleurs projets pour contribuer sont ceux que vous utilisez déjà. Ce qui importe le plus est que vous compreniez quelles sortes de modifications bénéficieront aux utilisateurs de ce programme, et c'est une chose que vous apprendrez en utilisant celui-ci.
community-find = Trouver la communauté (technique)
community-information = Beaucoup de projets Open Source on un ensemble d'information pour les utilisateurs du projet, et un autre ensemble d'informations pour les contributeurs potentiels. Il est essentiel que vous trouviez l'endroit de la documentation orientée contributeur afin de pouvoir suivre les discussions à propos du projet.
information-look = Cherchez ce genre de choses :
information-irc = Un ou plusieurs canaux IRC, pour discuter
information-mailing-list = Une liste de discussion par mail orientée développeur
information-bugtracker = Un bug tracker
information-scattered = La documentation de certains projets Open Source est très dispersée, donc votre meilleure chance de trouver (par exemple) la liste de discussion de Wordpress est d'utiliser un moteur de recherche Web. Essayez de chercher [wordpress email list].
information-no-tools = Notez que si le projet n'utilise pas d'outils de ce type, cela peut être un indicateur de mauvaise capacité à accueilir des contributions.
information-high-five = Cette étape est essentielle, alors levez la main quand vous la finissez, et un membre de l'équipe viendra viendra vous voir, valider votre trouvaille et vous toper dans la main.
choose-what = Choisir ce que vous voulez améliorer
choose-idea = Pour cette étape, vous pouvez utiliser vos propres idées ou trouver une tâche suggérée par le projet.
choose-defined.innerHTML = Nous <em>recommandons fortement</em> de choisir une tâche très bien définie ! Corriger une coquille dans la documentation, ajouter des commentaires au code source du projet, ou corriger un petit bug avec une solution très claire sont de bonnes options.
choose-easy = Beaucoup de projets listent des bugs faciles (easy), ou bons pour les nouveaux contributeurs. Une future version de ce document pointera vers des bons premiers bugs.
choose-bugtracker = Si vous arrivez avec votre propre idée de tâche à accomplir, pensez à l'ajouter dans le bug tracker du projet.
choose-staff.innerHTML = Une fois que vous avez trouvé une idée de ce sur quoi travailler, levez la main et un membre de l'équipe passera et s'assurera que votre choix s'accorde avec le temps limité que nous avons aujourd'hui. Ensuite, vous aurez droit à <a href="img/high-five.gif">une tape dans la main</a> !
download-stuff = Télécharger les trucs à modifier
download-vcs = Les projets Open Source maintiennent habituellement la dernière version de leur code source dans un système de gestion de versions ou quelque chose d'approchant. À cette étape, vous devriez trouver où est conservé ce code source et le télécharger sur votre ordinateur.
download-different = (Notez que des projets différents pourront avoir des façons différentes de stoquer leur code source. Cette partie peu donc s'avérer complexe.)
download-github = Si le projet est hébergé sur Github, vous devriez vous identifier sur Github et cliquer sur "fork", puis utiliser "git" sur votre ordinateur pour "cloner" votre copie personnelle du projet.
download-instructions = En règle générale, cherchez des instructions sur le projet à propos d'une commande "clone" ou "checkout".
download-exceptions = Enfin, vous devriez savoir qu'il y a quelques exceptions. Premièrement, certains projets acceptent les traductions via un site web, auquel cas il n'y a rien à télécharger ! C'est facile. Deuxièmement, un petit nombre de projets n'utilise pas d'outils de contrôle de versions. À la place, ils publient régulièrement des "tarballs." Dans ce cas, vous devrez télécharger et extraire le fichier "tar" de la dernière version du logiciel.
download-ask.innerHTML = Trouver le bon moyen d'obtenir le code peut être difficile, alors n'hésitez pas à lever la main pour demander de l'aide. Une fois que le téléchargement a commencé, levez la main et un membre de l'équipe viendra vous voir et vérifier. Une fois que vous et le mentor serez d'accord, vous aurez droit à une <a href="img/high-five-cat.gif">tape dans la main</a> !
environment-setup = Installer un environnement de développement
environment-readme = Cela varie grandement d'un projet à l'autre. Une fois que vous avez téléchargé le code, cherchez un fichier README, LISEZMOI ou INSTALLATION pour savoir comment l'installer.
environment-webserver = Dans le cas d'une application web comme WordPress, vous devrez lancer un serveur web sur votre propre ordinateur.
environment-wordpress = Wordpress :
environment-text-editor = Dans tous les cas, vous devrez utilisez un éditeur de texte :
environment-windows-editor = Sur Windows, nous recommandons Notepad++.
environment-mac-editor = Sur Mac OS, nous recommandons Smultron.
environment-linux-editor = Sur GNU/Linux, nous recommandons Gedit.
environment-web-only = Notez que si vous faites des modifications telles que des traductions qui peuvent être faites uniquement via le Web, tout ce que vous avez besoin de faire pour remplir cette étape est de visiter le site web approprié !
environment-staff.innerHTML = Une fois que vous avez un environnement de développement fonctionnel pour le projet, vous devriez lever la main et le montrer à un membre de l'équipe. <a href="http://downtime.makesad.us/foss-contrib-guide/img/curiosity-celebration.gif">Félicitations</a> ! C'est souvent la partie la plus difficile pour contribuer à un projet.
environment-mac-webserver.innerHTML = Pour les utilisateurs de Mac, suivre <a href="https://codex.wordpress.org/Installing_WordPress_Locally_on_Your_Mac_With_MAMP">ces instructions</a>.
issue-reproduce = Reproduire/comprendre le problème
issue-understand = Quel que soit le problème que vous essayez de résoudre, assurez-vous de comprendre exactement quel est ce problème
issue-yourself = Nous vous recommandons d'essayer de reproduire le problème vous-même. Par exemple, si vous essayez de résoudre un bug où, lors de l'impression, les documents arrivent complètement rouges, essayez de le faire. De cette manière, vous serez capable de dire si vos modifications corrigent le problème.
issue-already = Vous pourriez même trouver que le bug ne peut pas être reproduit, auquel cas, vous devriez le dire sur le bug tracker. (Peut-être que le bug est en fait déjà corrigé, auquel cas, félicitations ! Vous n'avez pas à écrire de code ; vous n'avez qu'à mettre le statut bug à jour, et à récolter les lauriers !)
issue-ask = Si vous n'arrivez pas à trouver comment reproduire le problème, levez la main et demander de l'aide à un mentor.
issue-discuss.innerHTML = Une fois que vous pouvez reproduire le problème, levez la main et discutez du bug avec un mentor. Une fois que le membre de l'équipe a vérifié que vous avez reproduit le problème, vous avez droit à un <a href="img/high-five-2.gif">high five</a> !
edit-code = Modifier le code
prepare-isolate = Isoler + préparer vos modifications
test-it = Tester
private-feedback = (Optionnel) Obtenir des retours en privé avant la soumission
share-changes = Partager vos modifications
feedback-respond = Répondre aux retours
sucess-accepted = Succès ! Le mainteneur accepte vos modifications :)
webapp-install = Installez-moi !

